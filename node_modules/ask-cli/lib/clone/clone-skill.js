'use strict';

const apiWrapper = require('../api/api-wrapper');
const tools = require('../utils/tools');
const CONSTANTS = require('../utils/constants');
const jsonfile = require('jsonfile');
const path = require('path');

// Public
module.exports = {
    getSkill: (skillId, profile, doDebug, callback) => {
        // ask clone will only call get-skill with development stage
        apiWrapper.callGetSkill(skillId, CONSTANTS.SKILL.STAGE.DEVELOPMENT, profile, doDebug, (data) => {
            if (data.statusCode !== 303) {
                let skillSchema = tools.convertDataToJsonObject(data.body);
                if (skillSchema) {
                    callback(skillSchema);
                }
            } else {
                if (data.body.location !== null) {
                    apiWrapper.handleGetSkillRedirect(data.body.location, profile, doDebug, (redirectResponseData) => {
                        let response = tools.convertDataToJsonObject(redirectResponseData.body);
                        if (response) {
                            console.log(JSON.stringify(response, null, 2));
                        }
                    });
                } else {
                    console.error('Call get-skill error.\nError code: 303');
                    console.error('There is no redirect URL in the response.');
                }
            }
        });
    },
    clone: (skillPath, skillSchema, skillId, skillInfo) => {
        jsonfile.writeFileSync(skillPath, skillSchema, {spaces: 2});
        console.log('Skill schema for ' + skillInfo.skillName + ' created at\n' +
            '    .' + path.sep + path.join(skillInfo.skillName, 'skill.json') + '\n');
    }
};
